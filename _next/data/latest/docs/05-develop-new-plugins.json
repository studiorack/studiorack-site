{"pageProps":{"allDocs":[{"slug":"02-create-a-project-config","content":"","title":"Create a project config"},{"slug":"03-add-remove-plugins","content":"","title":"Add & remove plugins"},{"slug":"04-launch-project-config","content":"","title":"Launch project config"},{"slug":"05-develop-new-plugins","content":"","title":"Develop new plugins"},{"slug":"06-command-line","content":"","title":"Command line"}],"doc":{"slug":"05-develop-new-plugins","content":"<h2>Use our plugin templates (optional)</h2>\n<p>We have plugin templates which automate plugin builds</p>\n<ul>\n<li><a href=\"https://github.com/studiorack/studiorack-template-clap\">studiorack-template-clap</a></li>\n<li><a href=\"https://github.com/studiorack/studiorack-template-dpf\">studiorack-template-dpf</a></li>\n<li><a href=\"https://github.com/studiorack/studiorack-template-dplug\">studiorack-template-dplug</a></li>\n<li><a href=\"https://github.com/studiorack/studiorack-template-iplug\">studiorack-template-iplug</a></li>\n<li><a href=\"https://github.com/studiorack/studiorack-template-juce\">studiorack-template-juce</a></li>\n<li><a href=\"https://github.com/studiorack/studiorack-template-sf2\">studiorack-template-sf2</a></li>\n<li><a href=\"https://github.com/studiorack/studiorack-template-sfz\">studiorack-template-sfz</a></li>\n<li><a href=\"https://github.com/studiorack/studiorack-template-steinberg\">studiorack-template-steinberg</a></li>\n</ul>\n<p>You can fork the repos on GitHub or use our command line tool. Create a new plugin using a starter template (clap, dpf, dplug, iplug, juce, sf2, sfz, steinberg):</p>\n<pre><code>studiorack plugin create myplugin --type steinberg\n</code></pre>\n<p>This creates a new plugin using the starter template with the following structure:</p>\n<pre><code>/myplugin\n    /index.js\n    /LICENSE\n    /README.md\n    /src\n    /vst3sdk\n</code></pre>\n<p>Follow the instructions at <code>./myplugin/README.md</code> to install and build your plugin</p>\n<h2>Adding your plugin to StudioRack</h2>\n<p>The StudioRack Registry accepts multiple sources for plugin data:</p>\n<h3>1. Yaml files</h3>\n<p>Create a fork of the repo <a href=\"https://github.com/studiorack/studiorack-registry\">studiorack-registry</a>. Add new folders for your organization and plugin using <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Kebab_case\">kebab-case</a>:</p>\n<pre><code>./src/plugins/org-name/plugin-name\n</code></pre>\n<p>Add a jpeg screenshot of the plugin, and flac audio file previewing the plugin:</p>\n<pre><code>./src/plugins/org-name/plugin-name/plugin-name.flac\n./src/plugins/org-name/plugin-name/plugin-name.jpg\n</code></pre>\n<p><code>.jpg</code> and <code>.flac</code> compressed formats were chosen to optimize loading times on the <a href=\"https://studiorack.github.io/studiorack-site/\">StudioRack website</a>.</p>\n<p>Create yaml files for each version of the plugin using <a href=\"https://semver.org\">Semantic Versioning</a>.</p>\n<pre><code>./src/plugins/org-name/plugin-name/1.0.0.yaml\n./src/plugins/org-name/plugin-name/2.0.0.yaml\n</code></pre>\n<p>Semantic versioning allows the StudioRack installer to install the latest non-breaking version of a plugin.</p>\n<p>Use the below template yaml file as a starting point. StudioRack Registry validates each plugin's metadata,\nif you miss or enter incorrect information, your plugin will not be included in the registry.</p>\n<pre><code>---\nname: Sfizz\nauthor: SFZTools\nhomepage: https://github.com/sfztools/sfizz\ndescription: SFZ parser and synth c++ library, providing AU / LV2 / VST3 plugins and JACK standalone client.\ndate: 2024-01-14T00:00:00.000Z\nlicense: bsd-2-clause\ntags:\n  - Instrument\n  - Sampler\n  - Synth\nfiles:\n  audio:\n    url: https://studiorack.github.io/studiorack-registry/plugins/sfztools/sfizz/sfizz.flac\n    size: 47910\n  image:\n    url: https://studiorack.github.io/studiorack-registry/plugins/sfztools/sfizz/sfizz.jpg\n    size: 33976\n  linux:\n    url: https://github.com/sfztools/sfizz/releases/download/1.2.3/sfizz-1.2.3.tar.gz\n    size: 19102967\n  mac:\n    url: https://github.com/sfztools/sfizz/releases/download/1.2.3/sfizz-1.2.3-macos.tar.gz\n    size: 1748833\n  win:\n    url: https://github.com/sfztools/sfizz/releases/download/1.2.3/sfizz-1.2.3-win64.zip\n    size: 8286178\n</code></pre>\n<p>For effects, tag your plugin with <code>Effect</code> and then any of the following:</p>\n<ul>\n<li>Chorus</li>\n<li>Phaser</li>\n<li>Compression</li>\n<li>Distortion</li>\n<li>Amplifier</li>\n<li>Equalizer</li>\n<li>Pan</li>\n<li>Filter</li>\n<li>Reverb</li>\n<li>Delay</li>\n</ul>\n<p>For instruments, tag your plugin with <code>Instrument</code> and then any of the following:</p>\n<ul>\n<li>Drums</li>\n<li>Percussion</li>\n<li>Guitar</li>\n<li>String</li>\n<li>Keys</li>\n<li>Piano</li>\n<li>Orchestra</li>\n<li>Sampler</li>\n<li>Synth</li>\n<li>Vocals</li>\n</ul>\n<p>For file downloads, StudioRack prefers <code>.zip</code> files as these can be extracted automatically and placed into the correct locations without user interaction.\nIf you use other formats such as <code>deb, dmg, exe, msi</code> StudioRack will download and copy the file to the users directory, but not install.</p>\n<h3>2. GitHub repo</h3>\n<p>StudioRack supports scanning GitHub for compatible plugins. NOTE: to implement GitHub compatibility requires more effort than the yaml approach above.</p>\n<p>StudioRack registry searches the GitHub API for topic <code>studiorack-plugin</code>:</p>\n<pre><code>https://github.com/topics/studiorack-plugin\nhttps://api.github.com/search/repositories?q=topic:studiorack-plugin+fork:true\n</code></pre>\n<p>Add the <code>studiorack-plugin</code> topic to your GitHub repository, so it can be discovered.</p>\n<p>For each GitHub repository, the Registry loops through each release/version and expects to find a file called <code>plugins.json</code>:</p>\n<pre><code>https://github.com/REPOSITORY_NAME/releases/download/RELEASE_NAME/plugins.json\n</code></pre>\n<p>This should be in the format:</p>\n<pre><code>{\n  \"plugins\": [\n    {\n      \"author\": \"Rytmenpinne\",\n      \"homepage\": \"https://rytmenpinne.wordpress.com/sounds-and-such/salamander-drumkit/\",\n      \"name\": \"Salamander Drumkit\",\n      \"description\": \"Drumkit recorded in the garage with an acoustic sound/feel.\",\n      \"tags\": [\n        \"Instrument\",\n        \"Drums\",\n        \"sfz\"\n      ],\n      \"version\": \"1.0.0\",\n      \"id\": \"salamander-drumkit\",\n      \"date\": \"2012-02-25T07:00:00.000Z\",\n      \"files\": {\n        \"audio\": {\n          \"name\": \"salamander-drumkit.flac\",\n          \"size\": 162704\n        },\n        \"image\": {\n          \"name\": \"salamander-drumkit.jpg\",\n          \"size\": 94023\n        },\n        \"linux\": {\n          \"name\": \"salamander-drumkit.zip\",\n          \"size\": 269599176\n        },\n        \"mac\": {\n          \"name\": \"salamander-drumkit.zip\",\n          \"size\": 269599176\n        },\n        \"win\": {\n          \"name\": \"salamander-drumkit.zip\",\n          \"size\": 269599176\n        }\n      }\n    }\n  ]\n}\n</code></pre>\n<p>StudioRack Registry then performs validation and mapping on the plugins.json before compiling into the json feeds:</p>\n<pre><code>https://studiorack.github.io/studiorack-registry/v2/\nhttps://studiorack.github.io/studiorack-registry/v2/instruments.json\nhttps://studiorack.github.io/studiorack-registry/v2/effects.json\nhttps://studiorack.github.io/studiorack-registry/v2/sfz.json\n</code></pre>\n<p><a href=\"/docs/06-command-line\">Read the API Reference ></a></p>\n","title":"Develop new plugins"}},"__N_SSG":true}